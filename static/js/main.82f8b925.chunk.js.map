{"version":3,"sources":["reducers/keyboard.js","reducers/panel.js","reducers/index.js","services/constants.js","components/DrumPad.js","components/PowerButton.js","components/Panel.js","containers/PanelContainer.js","components/Page.js","serviceWorker.js","index.js","App.js"],"names":["DISPLAY_KEY","SWITCH_POWER","INITIAL_STATE","activeButton","btnColor","powerState","rootReducer","combineReducers","keyboard","state","arguments","length","undefined","action","type","displayMsg","payload","panel","store","applyMiddleware","createStore","createStoreWithMiddleware","audioData","id","sound","name","DrumPad","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","component","React","createRef","button","handleKeyDown","e","key","toUpperCase","props","power","shouldPlay","onClick","current","style","backgroundColor","handleKeyUp","handleOnClick","target","paused","play","currentTime","inherits","createClass","value","document","addEventListener","removeEventListener","_this$props","react_default","a","createElement","className","ref","src","Component","PowerButton","_ref","Panel","handleClick","displayKey","switchPower","handleDrumClick","clickedDrum","_this2","_this$props2","Fragment","map","val","DrumPad_DrumPad","PowerButton_PowerButton","connect","Page","PanelContainer","Boolean","window","location","hostname","match","ReactDOM","render","es","Page_Page","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.82f8b925.chunk.js","sourcesContent":["const DISPLAY_KEY = \"display_key\";\n\nexport function displayKey(id) {\n  return {\n    type: DISPLAY_KEY,\n    payload: id\n  };\n}\n\nexport function keyboardReducer(state = \"\", action) {\n  switch (action.type) {\n    case DISPLAY_KEY:\n      return {\n        displayMsg: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","const SWITCH_POWER = \"switch_power\";\nconst SET_ACTIVE_BUTTON = \"SET_ACTIVE_BUTTON\";\nconst INITIAL_STATE = {\n  activeButton: \"\",\n  btnColor: \"#439863\",\n  powerState: \"on\"\n};\n\nexport function switchPower(powerState) {\n  return { type: SWITCH_POWER, payload: powerState === \"on\" ? \"off\" : \"on\" };\n}\n\nexport function activeButton(button) {\n  return { type: SET_ACTIVE_BUTTON, payload: button };\n}\n\nexport function panelReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case SWITCH_POWER:\n      if (action.payload === \"on\") {\n        return {\n          powerState: action.payload,\n          btnColor: \"#439863\"\n        };\n      } else {\n        return {\n          powerState: action.payload,\n          btnColor: \"#986143\"\n        };\n      }\n    default:\n      return INITIAL_STATE;\n  }\n}\n","import { combineReducers, createStore, applyMiddleware } from \"redux\";\nimport { keyboardReducer } from \"./keyboard\";\nimport { panelReducer } from \"./panel\";\n\nconst rootReducer = combineReducers({\n  keyboard: keyboardReducer,\n  panel: panelReducer\n});\n\nconst createStoreWithMiddleware = applyMiddleware()(createStore);\nconst store = createStoreWithMiddleware(rootReducer);\n\nexport default store;\n","export const audioData = [\n  {\n    id: \"Q\",\n    sound: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3\",\n    name: \"Heater 1\"\n  },\n  {\n    id: \"W\",\n    sound: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3\",\n    name: \"Heater 2\"\n  },\n  {\n    id: \"E\",\n    sound: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3\",\n    name: \"Heater 3\"\n  },\n  {\n    id: \"A\",\n    sound: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3\",\n    name: \"Heater 4\"\n  },\n  {\n    id: \"S\",\n    sound: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3\",\n    name: \"Clap\"\n  },\n  {\n    id: \"D\",\n    sound: \"https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3\",\n    name: \"Open HH\"\n  },\n  {\n    id: \"Z\",\n    sound: \"https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3\",\n    name: \"Kick n' Hat\"\n  },\n  {\n    id: \"X\",\n    sound: \"https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3\",\n    name: \"Kick\"\n  },\n  {\n    id: \"C\",\n    sound: \"https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3\",\n    name: \"Closed HH\"\n  }\n];\n","import React, { Component } from \"react\";\n\nexport class DrumPad extends Component {\n  component = React.createRef();\n  button = React.createRef();\n\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.handleKeyDown);\n    document.addEventListener(\"keyup\", this.handleKeyUp);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.handleKeyDown);\n    document.removeEventListener(\"keyup\", this.handleKeyUp);\n  }\n\n  handleKeyDown = e => {\n    var key = e.key.toUpperCase();\n    if (this.props.power === \"on\" && this.props.id === key) {\n      this.shouldPlay();\n      this.props.onClick(this.props.name);\n      if (this.button.current) {\n        this.button.current.style.backgroundColor = \"#d9d9d9\";\n      }\n    }\n  };\n\n  handleKeyUp = e => {\n    if (this.button.current) {\n      this.button.current.style.backgroundColor = \"#eac67a\";\n    }\n  };\n\n  handleOnClick = e => {\n    if (this.props.power === \"on\") {\n      this.shouldPlay();\n      this.props.onClick(e.target.name);\n    }\n  };\n\n  shouldPlay = () => {\n    if (this.component.current) {\n      if (this.component.current.paused) {\n        this.component.current.play();\n      } else {\n        this.component.current.currentTime = 0;\n      }\n    }\n  };\n\n  render() {\n    const { id, name, sound } = this.props;\n    return (\n      <button\n        name={name}\n        id={id}\n        type=\"button\"\n        className=\"drum-pad\"\n        onClick={this.handleOnClick}\n        ref={this.button}\n      >\n        {id}\n        <audio className=\"clip\" id={id} src={sound} ref={this.component} />\n      </button>\n    );\n  }\n}\n","import React from \"react\";\n\nexport const PowerButton = ({ btnColor, onClick, powerState }) => (\n  <button\n    id=\"powerButton\"\n    type=\"button\"\n    className=\"power\"\n    onClick={onClick}\n    style={{ backgroundColor: btnColor }}\n  >\n    {powerState}\n  </button>\n);\n","import React, { Component } from \"react\";\nimport { audioData } from \"../services/constants\";\nimport { DrumPad } from \"./DrumPad\";\nimport { PowerButton } from \"./PowerButton\";\n\nclass Panel extends Component {\n  handleClick = () => {\n    const { displayKey, switchPower } = this.props;\n    displayKey(\"\");\n    switchPower(this.props.power);\n  };\n\n  handleDrumClick = clickedDrum => {\n    this.props.displayKey(clickedDrum);\n  };\n\n  render() {\n    const { btnColor, id, power } = this.props;\n    return (\n      <React.Fragment>\n        <div className=\"keyboard\">\n          {audioData.map(val => (\n            <DrumPad\n              key={val.id}\n              id={val.id}\n              sound={val.sound}\n              name={val.name}\n              onClick={this.handleDrumClick}\n              power={power}\n            />\n          ))}\n        </div>\n        <div id=\"panel\">\n          <div id=\"topPanel\">\n            <PowerButton\n              btnColor={btnColor}\n              onClick={this.handleClick}\n              powerState={power}\n            />\n          </div>\n          <div id=\"bottomPanel\">\n            <div id=\"display\">\n              <div>{id}</div>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Panel;\n","import { connect } from \"react-redux\";\n\nimport Panel from \"../components/Panel\";\nimport { displayKey } from \"../reducers/keyboard\";\nimport { switchPower } from \"../reducers/panel\";\n\nfunction mapStateToProps(state) {\n  return {\n    btnColor: state.panel.btnColor,\n    id: state.keyboard.displayMsg,\n    power: state.panel.powerState\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    displayKey,\n    switchPower\n  }\n)(Panel);\n","import React from \"react\";\nimport PanelContainer from \"../containers/PanelContainer\";\n\nexport const Page = () => (\n  <div id=\"page\">\n    <h3 id=\"title\">Drum Machine</h3>\n    <div id=\"drum-machine\">\n      <PanelContainer />\n    </div>\n  </div>\n);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport store from \"./reducers\";\nimport { Page } from \"./components/Page\";\n\nimport \"./styles.css\";\n\nexport const App = () => (\n  <Provider store={store}>\n    <Page />\n  </Provider>\n);\n"],"sourceRoot":""}